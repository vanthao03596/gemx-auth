generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique @map("email")
  password       String          @map("password")
  name           String          @map("name")
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")
  otpCodes       OtpCode[]
  socialAccounts SocialAccount[]

  @@map("users")
}

model OtpCode {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  email     String    @unique @map("email")
  code      String    @map("code")
  expiresAt DateTime  @map("expires_at")
  usedAt    DateTime? @map("used_at")
  createdAt DateTime  @default(now()) @map("created_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "otp_codes_user_id_fkey")
  @@map("otp_codes")
}

model SocialAccount {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  provider   String   @map("provider")
  providerId String   @map("provider_id")
  email      String?  @map("email")
  name       String?  @map("name")
  avatar     String?  @map("avatar")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerId])
  @@index([userId], map: "social_accounts_user_id_fkey")
  @@map("social_accounts")
}
